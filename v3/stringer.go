// Code generated by "stringer -output stringer.go -linecomment -type=Kind"; DO NOT EDIT.

package cc

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Invalid-0]
	_ = x[Bool-1]
	_ = x[Char-2]
	_ = x[ComplexChar-3]
	_ = x[ComplexDouble-4]
	_ = x[ComplexFloat-5]
	_ = x[ComplexInt-6]
	_ = x[ComplexLong-7]
	_ = x[ComplexLongDouble-8]
	_ = x[ComplexLongLong-9]
	_ = x[ComplexShort-10]
	_ = x[ComplexUInt-11]
	_ = x[ComplexUShort-12]
	_ = x[Decimal128-13]
	_ = x[Decimal32-14]
	_ = x[Decimal64-15]
	_ = x[Double-16]
	_ = x[Enum-17]
	_ = x[Float-18]
	_ = x[Float128-19]
	_ = x[Float32-20]
	_ = x[Float32x-21]
	_ = x[Float64-22]
	_ = x[Float64x-23]
	_ = x[Int-24]
	_ = x[Int128-25]
	_ = x[Long-26]
	_ = x[LongDouble-27]
	_ = x[LongLong-28]
	_ = x[Ptr-29]
	_ = x[SChar-30]
	_ = x[Short-31]
	_ = x[Struct-32]
	_ = x[TypedefName-33]
	_ = x[UChar-34]
	_ = x[UInt-35]
	_ = x[UInt128-36]
	_ = x[ULong-37]
	_ = x[ULongLong-38]
	_ = x[UShort-39]
	_ = x[Void-40]
	_ = x[typeofExpr-41]
	_ = x[typeofType-42]
	_ = x[maxKind-43]
}

const _Kind_name = "Invalid_Boolcharcomplex charcomplex doublecomplex floatcomplex intcomplex longcomplex long doublecomplex long longcomplex shortcomplex unsignedcomplex shor_Decimal128_Decimal32_Decimal64doubleenumfloat_Float128_Float32_Float32x_Float64_Float64xint__int128longlong doublelong longpointersigned charchortstructtypedefnameunsigned charunsignedunsigned __int128unsigned longunsigned long longunsigned shortvoidtypeofExprtypeofTypemaxKind"

var _Kind_index = [...]uint16{0, 7, 12, 16, 28, 42, 55, 66, 78, 97, 114, 127, 143, 155, 166, 176, 186, 192, 196, 201, 210, 218, 227, 235, 244, 247, 255, 259, 270, 279, 286, 297, 302, 308, 319, 332, 340, 357, 370, 388, 402, 406, 416, 426, 433}

func (i Kind) String() string {
	if i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
